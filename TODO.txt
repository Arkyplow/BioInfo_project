arc (sommet in ,sommet out, boolean sommetInIsComplemented,  boolean sommetOutIsComplemented, int score) ==> permmet de repressenter 4 comparaison ( F -> G , F -> Gt, Ft -> G , Ft-> Gt)
mais on aura a chaque fois un arc par comparaison

 
Sommet(boolean out, boolean in)  ==> lors du recherche de chemin on ne doit pas faire de discinction avec le complement , si on entre dans un sommet et qu'on en sort on doit exclure son complement aussi
avec cette representation on ne fait plus la difference dès qu'on passe par un somment ( que ce soit par con complement ou on ) on ne repassera jamais dedans de cette façon 




-chercher chemin hamilto (depends de la representation de comparaison ) 

=> attention aux cycles 









consensus pour construire l aligneent final (choisir le consensus ) ==> probeme : F = AAAAAATAAAAAG , T = TAAAAA Z = AATGCTAG ==>  ( F aligne avec T ) algine avec Z



Vote de majorité 
==> 	AAAAAATAAAAG
	______TAAAA_	
	________AATGCTAG
	          ?
= 	AAAAAATAAA?GCTAG     





contig local ==> contig global 
==> 	AAAAAATAAAAG 		F
	______TAAAA_		G
	
==>     T_AAAA			G
	TGAAAATGCTAG		T 

	           
= 	????????????


3 grands cas :

	1°      F inclus dans G 
	2-3°    F et G se chevauche ( la fin de F avec le debut de G ou inversement ) 


